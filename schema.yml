openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/colors/colors/:
    get:
      operationId: api_v1_colors_colors_list
      description: List all colors available in the system.
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Color'
          description: List of colors
        '400':
          description: Bad Request
    post:
      operationId: api_v1_colors_colors_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Color'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Color'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Color'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Color'
          description: ''
  /api/v1/colors/colors/{id}/:
    get:
      operationId: api_v1_colors_colors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this color.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Color'
          description: ''
    put:
      operationId: api_v1_colors_colors_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this color.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Color'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Color'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Color'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Color'
          description: ''
    patch:
      operationId: api_v1_colors_colors_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this color.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedColor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedColor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedColor'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Color'
          description: ''
    delete:
      operationId: api_v1_colors_colors_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this color.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/user/change-password/:
    post:
      operationId: api_v1_user_change_password_create
      tags:
      - api
      requestBody:
        content:
          oldPassword:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          newPassword:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: Password changed successfully
        '400':
          description: Incorrect old password or missing new password
  /api/v1/user/contacts/:
    get:
      operationId: api_v1_user_contacts_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
          description: ''
    post:
      operationId: api_v1_user_contacts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /api/v1/user/contacts/{id}/:
    get:
      operationId: api_v1_user_contacts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    put:
      operationId: api_v1_user_contacts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    patch:
      operationId: api_v1_user_contacts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContact'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    delete:
      operationId: api_v1_user_contacts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this contact.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/login/:
    post:
      operationId: api_v1_user_login_create
      tags:
      - api
      requestBody:
        content:
          username:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          password:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: Login successful
        '400':
          description: Incorrect password
        '404':
          description: User does not exist
  /api/v1/user/password-reset-request/:
    post:
      operationId: api_v1_user_password_reset_request_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: Password reset link sent successfully
        '400':
          description: Email is required
        '404':
          description: User with this email does not exist
  /api/v1/user/password-reset/{uidb64}/{token}/:
    post:
      operationId: api_v1_user_password_reset_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: query
        name: token
        schema:
          type: string
        description: Password reset token
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      - in: query
        name: uidb64
        schema:
          type: string
        description: User ID encoded in base64
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: Password reset successfully
        '400':
          description: Invalid UID or expired token
  /api/v1/user/register/:
    post:
      operationId: api_v1_user_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: User successfully registered
        '400':
          description: Invalid user data
  /api/v1/user/update-profile/:
    post:
      operationId: api_v1_user_update_profile_create
      tags:
      - api
      requestBody:
        content:
          name:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          email:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          phone:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: Profile updated successfully
        '400':
          description: Email is already taken
        '404':
          description: User not found
  /api/v1/workspaces/invite/:
    post:
      operationId: api_v1_workspaces_invite_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InviteEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InviteEmail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          description: Invitation has been sent
        '400':
          description: Email is required
        '500':
          description: Failed to send invitation
  /api/v1/workspaces/workspaces/:
    get:
      operationId: api_v1_workspaces_workspaces_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
          description: ''
    post:
      operationId: api_v1_workspaces_workspaces_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workspace'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
  /api/v1/workspaces/workspaces/{id}/:
    get:
      operationId: api_v1_workspaces_workspaces_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
    put:
      operationId: api_v1_workspaces_workspaces_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workspace'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
    patch:
      operationId: api_v1_workspaces_workspaces_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: ''
    delete:
      operationId: api_v1_workspaces_workspaces_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/workspaces/workspaces/{workspace_id}/categories/:
    get:
      operationId: api_v1_workspaces_workspaces_categories_list
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: api_v1_workspaces_workspaces_categories_create
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/workspaces/workspaces/{workspace_id}/categories/{id}/:
    get:
      operationId: api_v1_workspaces_workspaces_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_v1_workspaces_workspaces_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_v1_workspaces_workspaces_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_v1_workspaces_workspaces_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/workspaces/workspaces/{workspace_id}/subtasks/:
    get:
      operationId: api_v1_workspaces_workspaces_subtasks_list
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subtask'
          description: ''
    post:
      operationId: api_v1_workspaces_workspaces_subtasks_create
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subtask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subtask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subtask'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subtask'
          description: ''
  /api/v1/workspaces/workspaces/{workspace_id}/subtasks/{id}/:
    get:
      operationId: api_v1_workspaces_workspaces_subtasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subtask.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subtask'
          description: ''
    put:
      operationId: api_v1_workspaces_workspaces_subtasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subtask.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subtask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subtask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subtask'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subtask'
          description: ''
    patch:
      operationId: api_v1_workspaces_workspaces_subtasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subtask.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubtask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubtask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubtask'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subtask'
          description: ''
    delete:
      operationId: api_v1_workspaces_workspaces_subtasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subtask.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/workspaces/workspaces/{workspace_id}/tasks/:
    get:
      operationId: api_v1_workspaces_workspaces_tasks_list
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: api_v1_workspaces_workspaces_tasks_create
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/v1/workspaces/workspaces/{workspace_id}/tasks/{id}/:
    get:
      operationId: api_v1_workspaces_workspaces_tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: api_v1_workspaces_workspaces_tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: api_v1_workspaces_workspaces_tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: api_v1_workspaces_workspaces_tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/workspaces/workspaces/delete-workspace/:
    delete:
      operationId: api_v1_workspaces_workspaces_delete_workspace_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: Workspace deleted successfully
        '403':
          description: Permission denied
  /api/v1/workspaces/workspaces/first_member_workspace/:
    get:
      operationId: api_v1_workspaces_workspaces_first_member_workspace_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: First workspace of the user
        '404':
          description: No workspace found
  /api/v1/workspaces/workspaces/join-by-code/:
    post:
      operationId: api_v1_workspaces_workspaces_join_by_code_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workspace'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          description: Workspace joined successfully
        '400':
          description: Invalid join code
  /api/v1/workspaces/workspaces/leave/:
    post:
      operationId: api_v1_workspaces_workspaces_leave_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workspace'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          description: Successfully left workspace
        '400':
          description: User not a member
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        workspace:
          type: integer
          readOnly: true
        color:
          $ref: '#/components/schemas/Color'
      required:
      - color
      - id
      - name
      - workspace
    Color:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        hex_value:
          type: string
          maxLength: 7
      required:
      - hex_value
      - id
      - name
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        avatar:
          type: string
          nullable: true
          maxLength: 2
        color:
          $ref: '#/components/schemas/Color'
      required:
      - email
      - id
      - name
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        name:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
        color:
          $ref: '#/components/schemas/Color'
        avatar:
          type: string
          readOnly: true
        phone:
          type: string
          nullable: true
          maxLength: 20
      required:
      - avatar
      - email
      - id
      - name
      - password
    InviteEmail:
      type: object
      properties:
        email:
          type: string
          format: email
        join_code:
          type: string
      required:
      - email
      - join_code
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        workspace:
          type: integer
          readOnly: true
        color:
          $ref: '#/components/schemas/Color'
    PatchedColor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        hex_value:
          type: string
          maxLength: 7
    PatchedContact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        avatar:
          type: string
          nullable: true
          maxLength: 2
        color:
          $ref: '#/components/schemas/Color'
    PatchedSubtask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_completed:
          type: boolean
    PatchedTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date
        category:
          type: integer
        selected_contacts:
          type: array
          items:
            type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
        workspace:
          type: integer
          readOnly: true
        subtasks:
          type: array
          items:
            $ref: '#/components/schemas/Subtask'
        prio:
          $ref: '#/components/schemas/PrioEnum'
    PatchedWorkspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        members:
          type: array
          items:
            $ref: '#/components/schemas/CustomUser'
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        join_code:
          type: string
          readOnly: true
    PrioEnum:
      enum:
      - low
      - medium
      - high
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
    StatusEnum:
      enum:
      - done
      - awaitingFeedback
      - todo
      - inProgress
      type: string
      description: |-
        * `done` - Done
        * `awaitingFeedback` - Awaiting Feedback
        * `todo` - To Do
        * `inProgress` - In Progress
    Subtask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        is_completed:
          type: boolean
      required:
      - id
      - name
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date
        category:
          type: integer
        selected_contacts:
          type: array
          items:
            type: integer
        status:
          $ref: '#/components/schemas/StatusEnum'
        workspace:
          type: integer
          readOnly: true
        subtasks:
          type: array
          items:
            $ref: '#/components/schemas/Subtask'
        prio:
          $ref: '#/components/schemas/PrioEnum'
      required:
      - category
      - due_date
      - id
      - name
      - workspace
    Workspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        members:
          type: array
          items:
            $ref: '#/components/schemas/CustomUser'
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        join_code:
          type: string
          readOnly: true
      required:
      - id
      - join_code
      - members
      - name
      - owner
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
